openapi: 3.0.0
info:
  title: API REST - Programación 3 - 2024
  description: API REST para la gestión de reclamos de la concesionaria de automóviles Prog.III.
  version: 1.0.0

servers:
  - url: http://localhost:3000/api/v1

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:

# RUTAS AUTH

  /auth/registrar:
    post:
      summary: Registrar un nuevo usuario
      description: Endpoint para registrar un nuevo usuario con una cuenta de tipo cliente por defecto.
      tags:
        - AUTH
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  example: "Cliente"
                apellido:
                  example: "de Pruebas"
                correoElectronico:
                  example: "clt.correodepruebasfullstack@gmail.com"
                contrasenia:
                  example: "Cliente2025."
      responses:
        201:
          description: "Usuario registrado con éxito."
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "Usuario registrado con éxito."
                  idUsuario:
                    type: string
                    example: "1"
        400:
          description: "Solicitud incorrecta. Hay dos posibles errores:"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Faltan datos obligatorios para el registro."  
                  error:
                    type: string
                    example: "La contraseña debe tener al menos 8 caracteres, incluyendo una mayúscula, una minúscula, un número y un carácter especial."  # Segundo posible error
        409:
          description: "Este usuario ya existe."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Este usuario ya existe."
        500:
          description: "Error al registrar el usuario."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error al registrar el usuario."  

  /auth/login:
    post:
      summary: Iniciar sesión
      description: Endpoint para iniciar sesión.
      tags:
        - AUTH
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                correoElectronico:
                  example: "clt.correodepruebasfullstack@gmail.com"
                contrasenia:
                  example: "Cliente2025."
      responses:
        201:
          description: "Bienvenido."
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "Bienvenido."
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        400:
          description: "Solicitud incorrecta. Posibles errores:"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Faltan datos obligatorios."  
                  error:
                    type: string
                    example: "Correo electrónico o contraseña incorrecta."  
        500:
          description: "Error interno del servidor. Intente más tarde."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno del servidor. Intente más tarde."


# RUTAS USUARIOS

  /usuarios/mi-perfil:
    get:
      summary: Obtiene perfil del usuario
      tags:
        - USUARIOS
      security: 
      - BearerAuth: []
      description: Permite obtener el perfil del usuario para el propio usuario.
      responses:
        '200':
          description: "Mi perfil"
          content:
            application/json:
              schema:
                type: object
                properties:
                  nombre:
                    type: string
                    example: "Cliente"
                  apellido:
                    type: string
                    example: "de Pruebas"
                  correoElectronico:
                    type: string
                    example: "clt.correodepruebasfullstack@gmail.com"
                  imagen:
                    type: string
                    example: "cliente.png"
        '401':
          description: "No autorizado. No se encontró el usuario."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No autorizado. No se encontró el usuario."
        '404':
          description: "Perfil no encontrado."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Perfil no encontrado."
        '500':
          description: "Error interno en servidor."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en servidor."
      
  /usuarios/mi-perfil-actualizar/{idUsuario}:
    patch:
      summary: Actualiza el perfil de un usuario
      tags:
        - USUARIOS
      security: 
      - BearerAuth: []
      description: Permite modificar los campos `correoElectronico` e `imagen` del perfil de un usuario.
      parameters:
        - name: idUsuario
          in: path
          required: true
          description: El ID del usuario que desea actualizar su perfil.
          schema:
            type: integer
            example: 2
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                correoElectronico:
                  type: string
                  description: Correo electrónico nuevo.
                  example: clt.correodepruebasfullstack@gmail.com
                imagen:
                  type: string
                  format: binary
                  description: Archivo de imagen de perfil.
                  example: cliente.jpg
      responses:
        200:
          description: "Perfil actualizado exitosamente."
          content:
            application/json:
              schema:
                type: object
                properties:
                  idUsuario:
                    type: integer
                    description: "ID del usuario actualizado"
                    example: 76
                  correoElectronico:
                    type: string
                    description: Correo electrónico nuevo
                    example: "clt.correodepruebasfullstack@gmail.com"
                  imagen:
                    type: string
                    description: Nombre del archivo de imagen
                    example: "cliente.jpg"
        400:
          description: "No se enviaron datos para ser modificados."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No se enviaron datos para ser modificados."
        409:
          description: "Este usuario ya existe."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Este usuario ya existe."
        404:
          description: "Perfil no encontrado."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Perfil no encontrado."
        500:
          description: "Error interno en servidor."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en servidor."

  /usuarios/:
    get:
      summary: Obtiene todos los usuarios
      tags:
        - USUARIOS
      security: 
      - BearerAuth: []
      description: Permite listar todos los usuarios.
      
      responses:
        '200':
          description: Usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idUsuario:
                      type: integer
                      example: 2
                    nombre:
                      type: string
                      example: "Jon"
                    apellido:
                      type: string
                      example: "Snow"
                    correoElectronico:
                      type: string
                      example: "jonsno@gmail.com"
        '500':
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor."

  /usuarios/{idUsuario}:
    get:
      summary: Obtiene un usuario 
      tags:
        - USUARIOS
      security: 
      - BearerAuth: []
      description: Permite obtener un usuario según su id.
      parameters:
        - name: idUsuario
          in: path
          required: true
          description: El ID del usuario que se desea obtener.
          schema:
            type: integer
            example: 2
      responses:
        200:
          description: Usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  idUsuario:
                    type: integer
                    example: 2
                  nombre:
                    type: string
                    example: "Jon"
                  apellido:
                    type: string
                    example: "Snow"
                  correoElectronico:
                    type: string
                    example: "jonsno@gmail.com"
        400:
          description: Faltan datos obligatorios
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Faltan datos obligatorios."
        500:
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor."
                
  /usuarios/crearUsuarioAdm:
    post:
      summary: Crea un usuario administrador
      description: Endpoint para crear un nuevo usuario de tipo empleado.
      tags: 
        - USUARIOS
      security: 
      - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  example: Administrador
                apellido: 
                  example: de Prueba
                correoElectronico: 
                  example: adm.correodepruebasfullstack@gmail.com
                contrasenia:
                  example: Administrador2025.  
      responses:
        '201':
          description: Usuario ADMINISTRADOR creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  idUsuario:
                    type: integer
                    example: 77
                  nombre:
                    type: string
                    example: "Aministrador"
                  apellido:
                    type: string
                    example: "de Pruebas"
                  correoElectronico:
                    type: string
                    example: "adm.correodepruebasfullstack@gmail.com"
                  contrasenia:
                    type: string
                    example: Administrador2025.
        400:
          description: Faltan datos obligatorios para el registro
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Faltan datos obligatorios para el registro"     
        409:
          description: Este usuario ya existe
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Este usuario ya existe"
        500:
          description: No se pudo crear el usuario
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No se pudo crear el usuario"
        500:
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor"

  /usuarios/crearUsuarioClt:
    post:
      summary: Crea un usuario cliente
      description: Endpoint para crear un nuevo usuario de tipo cliente.
      tags: 
        - USUARIOS
      security: 
      - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  example: Cliente
                apellido: 
                  example: de Prueba
                correoElectronico: 
                  example: clt.correodepruebasfullstack@gmail.com
                contrasenia:
                  example: Cliente2025.  
      responses:
        201:
          description: Usuario CLIENTE creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  idUsuario:
                    type: integer
                    example: 2
                  nombre:
                    type: string
                    example: "Cliente"
                  apellido:
                    type: string
                    example: "de Pruebas"
                  correoElectronico:
                    type: string
                    example: "clt.correodepruebasfullstack@gmail.com"
                  contrasenia:
                    type: string
                    example: Cliente2025.
        400:
          description: Faltan datos obligatorios para el registro
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Faltan datos obligatorios para el registro"     
        409:
          description: Este usuario ya existe
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Este usuario ya existe"
        500:
          description: No se pudo crear el usuario
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No se pudo crear el usuario"
        500:
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor"

  /usuarios/crearUsuarioEe:
    post:
      summary: Crea un usuario empleado
      description: Endpoint para crear un nuevo usuario de tipo empleado.
      tags: 
        - USUARIOS
      security: 
      - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  example: Empleado
                apellido: 
                  example: de Pruebas
                correoElectronico: 
                  example: ee.correodepruebasfullstack@gmail.com
                contrasenia:
                  example: Empleado2025.
                idOficina:
                  example: 3          
      responses:
        201:
          description: Usuario EMPLEADO creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  idUsuario:
                    type: integer
                    example: 78
                  nombre:
                    type: string
                    example: "Empleado"
                  apellido:
                    type: string
                    example: "de Pruebas"
                  correoElectronico:
                    type: string
                    example: "ee.correodepruebasfullstack@gmail.com"
                  contrasenia:
                    type: string
                    example: Empleado2025.
                  idOficina:
                    type: integer
                    example: 3
        400:
          description: Faltan datos obligatorios para el registro
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Faltan datos obligatorios para el registro"     
        409:
          description: Este usuario ya existe
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Este usuario ya existe"
        500:
          description: No se pudo crear el usuario
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No se pudo crear el usuario"
        500:
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor"

  /usuarios/modificar-usuarios/{idUsuario}:
    patch:
      summary: Actualiza un usuario
      tags:
        - USUARIOS
      security: 
      - BearerAuth: []
      description: Permite modificar campos de un usuario existente. Se pueden actualizar los campos `idUsuarioTipo` e `idOficina`.
      parameters:
        - name: idUsuario
          in: path
          required: true
          description: El ID del usuario que se desea actualizar.
          schema:
            type: integer
            example: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idUsuarioTipo:
                  type: string
                  description: ID del nuevo tipo de usuario al que se quiere reasignar al usuario.
                  example: 1
                idOficina:
                  type: string
                  description: ID de la oficina a la que se quiere asignar o reasignar a un usuario.
                  example: 1  
      responses:
        200:
          description: Usuario modificado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  idUsuario:
                    type: integer
                    description: ID del usuario actualizado
                    example: 0
                  idUsuarioTipo:
                    type: string
                    description: ID del tipo de usuario reasignado
                    example: 1
                  idOficina:
                    type: string
                    description: ID de la oficina asignada/reasignada
                    example: 1
                  
        400:
          description: Datos inválidos o faltantes
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "No se encontraron datos válidos para modificar"
        400:
          description: No se pudo modificar el usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "No se pudo modificar el usuario"
        500:
          description: Error interno en el servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error interno en el servidor"

  /usuarios/eliminar-usuarios/{idUsuario}:
    delete:
      summary: Eliminar un usuario
      description: Endpoint para eliminar un usuario.
      tags: 
        - USUARIOS
      security: 
      - BearerAuth: []
      parameters:
        - name: idUsuario
          in: path
          required: true
          description: El ID del usuario que se quiere eliminar.
          schema:
            type: integer
            example: 0
      responses:
        200:
          description: Usuario eliminado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: OK
                  mensaje: 
                    type: string
                    example: "Usuario eliminado correctamente"
        400:
          description: Falta el id del usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "Falta el id del usuario"
        400:
          description: No se pudo eliminar el usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "No se pudo eliminar el usuario"
        500:
          description: Error interno en el servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error interno en el servidor"
                
      
# RUTAS RECLAMOS

  /reclamos/crear:
    post:
      summary: Crear un nuevo reclamo
      description: Endpoint para crear un nuevo reclamo.
      tags: 
        - RECLAMOS
      security: 
      - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                asunto:
                  example: "Falla motor"
                idReclamoTipo:
                  example: 1
                idUsuarioCreador:
                  example: 76
      responses:
        '201':
          description: Su reclamo ha sido creado con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: OK
                  mensaje: 
                    type: string
                    example: "Su reclamo ha sido creado con éxito"
        '400':
          description: Faltan datos obligatorios
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "Faltan datos obligatorios"
        '500':
          description: Error interno en el servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error interno en el servidor"

  /reclamos/mis-reclamos/{:idUsuario}:
    get:
      summary: Obtiene información de todos los reclamos de un usuario
      description: Endpoint para obtener todos los reclamos realizados por un usuario cliente. 
      tags: 
        - RECLAMOS
      security: 
      - BearerAuth: []
      parameters:
        - name: idUsuario
          in: path
          required: true
          description: El ID del usuario cliente que creó los reclamos.
          schema:
            type: integer
            example: 76
      responses:
        '200':
          description: Mis reclamos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idReclamo:
                      type: integer
                      example: 1
                    asunto:
                      type: string
                      example: "Falla motor"
                    idReclamoEstado:
                      type: integer
                      example: 1
        '500':
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor."
      
  /reclamos/cancelar/{:idReclamo}:
    post:
      summary: Cancela un reclamo
      description: Endpoint para cancelar un reclamo que recibe como parametro, ademas notifica al cliente el cambio de estado.
      tags:
        - RECLAMOS
      security: 
      - BearerAuth: []
      parameters:
        - name: idReclamo
          in: path
          required: true
          description: El ID del reclamo que se quiere cancelar.
          schema:
            type: integer
            example: 0
      responses:
        201:
          description: Correo electrónico enviado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "OK"
                  mensaje:
                    type: string
                    example: "Correo electrónico enviado."
        404:
          description: Faltan datos obligatorios
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "Faltan datos obligatorios"
        '500':
          description: Error interno en el servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error interno en el servidor" 

  /reclamos/atender/{idReclamo}:
    post:
      summary: Marca como atendido el reclamo
      description: Endpoint marcar como atendido el reclamo que recibe como parametro, ademas notificia al cliente el cambio de estado
      tags: 
        - RECLAMOS
      security: 
      - BearerAuth: []
      parameters:
        - name: idReclamo
          in: path
          required: true
          description: El ID del reclamo que se desea actualizar.
          schema:
            type: integer
            example: 57
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - idReclamoEstado
              properties:
                idReclamoEstado:
                  type: integer
                  description: ID del estado inicial del reclamo
                  example: 2
      responses:
        201:
          description: Correo electrónico enviado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "OK"
                  mensaje:
                    type: string
                    example: "Correo electrónico enviado."
        404:
          description: Mensaje informativo con el error
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "Faltan datos obligatorios"
  
  /reclamos/reclamos-oficina/{idOficina}:
    get:
      summary: Obtiene los reclamos por oficina
      tags:
        - RECLAMOS
      security: 
      - BearerAuth: []
      description: Permite listar todos los reclamos asignados a una oficina por medio de su id.
      parameters:
        - name: idOficina
          in: path
          required: true
          description: El ID de la oficina que desea listar sus reclamos asignados.
          schema:
            type: integer
            example: 4
      responses:
        '200':
          description: Reclamos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idReclamo:
                      type: integer
                      example: 1
                    idUsuarioCreador:
                      type: integer
                      example: 2
                    asunto:
                      type: string
                      example: "Falla motor"
                    idReclamoEstado:
                      type: integer
                      example: 1
        '404':
          description: No tienes reclamos
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "No tienes reclamos"
        '500':
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor."
      
  /reclamos/finalizar/{idReclamo}:
    post:
      summary: Marca como finalizado el reclamo
      description: Endpoint para marcar como finalizado el reclamo que recibe como parámetro, además notifica al cliente el cambio de estado
      tags: 
        - RECLAMOS
      security: 
      - BearerAuth: []
      parameters:
        - name: idReclamo
          in: path
          required: true
          description: El ID del reclamo que se desea actualizar.
          schema:
            type: integer
            example: 57
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - idReclamoEstado
              properties:
                idReclamoEstado:
                  type: integer
                  description: ID del reclamo finalizador
                  example: 4
      responses:
        201:
          description: Correo electrónico enviado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "OK"
                  mensaje:
                    type: string
                    example: "Correo electrónico enviado."
        404:
          description: Mensaje informativo con el error
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "Faltan datos obligatorios"
        '500':
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor."

  /reclamos/informe:
    get:
      summary: Obtiene informe sobre los reclamos
      tags:
        - RECLAMOS
      security: 
      - BearerAuth: []
      parameters:
        - name: formato
          in: query
          required: true
          description: Formato del informe (csv o pdf)
          schema:
            type: string
            enum: [csv, pdf]
            example: csv
      responses:
        '200':
          description: Informe generado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "OK"
                  mensaje:
                    type: string
                    example: "Informe generado correctamente."
        404:
          description: Faltan datos obligatorios
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "Faltan datos obligatorios"
        '500':
          description: Error interno en el servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error interno en el servidor"


# RUTAS RECLAMOS-TIPOS

  /reclamos-tipos/:
    get:
      summary: Obtiene los tipos de reclamos
      tags:
        - RECLAMOS-TIPOS
      security: 
      - BearerAuth: []
      description: Permite listar todos los tipos de reclamos.
      responses:
        '200':
          description: Reclamos tipos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idReclamoTipo:
                      type: integer
                      example: 1
                    descripcion:
                      type: string
                      example: "Aprobación de cobertura"
                    activo:
                      type: number
                      example: 1
        '500':
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor."
      
  /reclamos-tipos/{idReclamoTipo}:
    get:
      summary: Obtiene un tipo de reclamo
      tags:
        - RECLAMOS-TIPOS
      security: 
      - BearerAuth: []
      description: Permite obtener un tipo de reclamo según su id.
      parameters:
        - name: idReclamoTipo
          in: path
          required: true
          description: El ID del reclamo que se desea obtener.
          schema:
            type: integer
            example: 3
      responses:
        '200':
          description: Reclamo tipo
          content:
            application/json:
              schema:
                type: object
                properties:
                  idReclamoTipo:
                    type: integer
                    example: 1
                  descripcion:
                    type: string
                    example: "Aprobación de cobertura"
                  activo:
                    type: number
                    example: 1
        404:
          description: Faltan datos obligatorios
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "Faltan datos obligatorios"
        '500':
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor."

  /reclamos-tipos/crear:
    post:
      summary: Crear un nuevo tipo de reclamo
      description: Endpoint para crear un nuevo tipo de reclamo.
      tags: 
        - RECLAMOS-TIPOS
      security: 
      - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                descripcion:
                  example: "Garantía"
                activo:
                  example: 1
      responses:
        200:
          description: Reclamo tipo creado 
          content:
            application/json:
              schema:
                type: object
                properties:
                  idReclamoTipo:
                    type: integer
                    example: 1
                  descripcion:
                    type: string
                    example: "Aprobación de cobertura"
                  activo:
                    type: number
                    example: 1
        404:
          description: Faltan datos obligatorios
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "Faltan datos obligatorios"
        '500':
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor."

  /reclamos-tipos/modificar/{idReclamoTipo}:
    patch:
      summary: Actualiza un tipo de reclamo existente
      tags:
        - RECLAMOS-TIPOS
      security: 
      - BearerAuth: []
      description: Permite modificar campos de un tipo de reclamo existente. Se pueden actualizar los campos `descripcion` y `activo`.
      parameters:
        - name: idReclamoTipo
          in: path
          required: true
          description: El ID del tipo de reclamo que se desea actualizar.
          schema:
            type: integer
            example: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                descripcion:
                  type: string
                  description: Descripción del tipo de reclamo
                  example: "Garantías y devoluciones"
                activo:
                  type: string
                  description: Estado activo o incativo del tipo de reclamo
                  example: 1  
      responses:
        200:
          description: Tipo de reclamo actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  idReclamoTipo:
                    type: integer
                    description: ID del reclamo actualizado
                    example: 12
                  descripcion:
                    type: string
                    description: Descripcion del tipo de reclamo
                    example: "Garantías y devoluciones"
                  activo:
                    type: string
                    description: Estado activo o inactivo del tipo de reclamo
                    example: 1
                  
        400:
          description: Datos inválidos o faltantes
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "Faltan datos obligatorios o formato incorrecto"
        404:
          description: Reclamo no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No se encontró un tipo de reclamo con el ID proporcionado."
        500:
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor."

  /reclamos-tipos/eliminar/{idReclamoTipo}:
    delete:
      summary: Eliminar un tipo de reclamo
      description: Endpoint para eliminar un tipo de reclamo.
      tags: 
        - RECLAMOS-TIPOS
      security: 
      - BearerAuth: []
      parameters:
        - name: idReclamoTipo
          in: path
          required: true
          description: El ID del tipo de reclamo que se quiere eliminar.
          schema:
            type: integer
            example: 0
      responses:
        200:
          description: Reclamo tipo eliminado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: OK
                  mensaje: 
                    type: string
                    example: "Reclamo tipo eliminado correctamente"
        400:
          description: Falta el id del reclamo tipo
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "Se requiere el id del reclamo tipo a eliminar"
        400:
          description: No se pudo eliminar el tipo de reclamo
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "No se pudo eliminar el tipo de reclamo, puede ser que el tipo de reclamo ya no exista."
        500:
          description: Error interno en el servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error interno en el servidor"


# RUTAS OFICINAS

  /oficinas/:
    get:
      summary: Obtiene todas las oficinas
      tags:
        - OFICINAS
      security: 
      - BearerAuth: []
      description: Permite listar todas las oficinas.
      
      responses:
        '200':
          description: Oficinas
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idOficina:
                      type: integer
                      example: 1
                    nombre:
                      type: string
                      example: "Dpto. de Taller y Servicio Técnico"
                    idReclamoTipo:
                      type: number
                      example: 1
        '500':
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor."

  /oficinas/{idOficina}:
    get:
      summary: Obtiene una oficina 
      tags:
        - OFICINAS
      security: 
      - BearerAuth: []
      description: Permite obtener una oficina según su id.
      parameters:
        - name: idOficina
          in: path
          required: true
          description: El ID de la oficina que se desea obtener.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Oficina
          content:
            application/json:
              schema:
                type: object
                properties:
                  idOficina:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: "Dpto. de Taller y Servicio Técnico"
                  idReclamoTipo:
                    type: number
                    example: 1
        404:
          description: Faltan datos obligatorios
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "Faltan datos obligatorios"
        '500':
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor."
      
  /oficinas/crear:
    post:
      summary: Crear un nueva oficina
      description: Endpoint para crear una nueva oficina.
      tags: 
        - OFICINAS
      security: 
      - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  example: "Dpto. de Marketing y Publicidad"
                idReclamoTipo:
                  example: 1
      responses:
        200:
          description: Oficina 
          content:
            application/json:
              schema:
                type: object
                properties:
                  idOficina:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: "Dpto. de Marketing y Publicidad"
                  idReclamoTipo:
                    type: number
                    example: 1
        404:
          description: Faltan datos obligatorios
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "Faltan datos obligatorios"
        500:
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error interno en el servidor."

  /oficinas/modificar/{idOficina}:
    patch:
      summary: Actualiza una oficina
      tags:
        - OFICINAS
      security: 
      - BearerAuth: []
      description: Permite modificar campos de una oficina existente. Se pueden actualizar los campos `nombre` e `idReclamoTipo`.
      parameters:
        - name: idOficina
          in: path
          required: true
          description: El ID de la oficina que se desea actualizar.
          schema:
            type: integer
            example: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: Nombre de la oficina
                  example: "Dpto de Marketing, Publicidad y Redes"
                idReclamoTipo:
                  type: string
                  description: ID del tipo de reclamo que pertenece a esa oficina
                  example: 1  
      responses:
        '200':
          description: Oficina actualizada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  idOficina:
                    type: integer
                    description: ID de la oficina actualizada
                    example: 0
                  nombre:
                    type: string
                    description: Descripcion de la oficina
                    example: "Dpto de Marketing, Publicidad y Redes"
                  idReclamoTipo:
                    type: string
                    description: ID del tipo de reclamo que pertenece a esa oficina
                    example: 1
                  
        '400':
          description: Datos inválidos o faltantes
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "Faltan datos obligatorios o formato incorrecto"
        '404':
          description: Oficina no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No se encontró una oficina con el ID proporcionado."

  /oficinas/eliminar/{idOficina}:
    delete:
      summary: Eliminar una oficina
      description: Endpoint para eliminar una oficina.
      tags: 
        - OFICINAS
      security: 
      - BearerAuth: []
      parameters:
        - name: idOficina
          in: path
          required: true
          description: El ID de la oficina que se quiere eliminar.
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: Oficina eliminada correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: OK
                  mensaje: 
                    type: string
                    example: "Oficina eliminada correctamente"
        '400':
          description: Falta el id de la oficina
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "Se requiere el id de la oficina a eliminar"
        '400':
          description: No se pudo eliminar la oficina
          content:
            application/json:
              schema:
                type: object
                properties:
                  estado:
                    type: string
                    example: "Falla"
                  mensaje:
                    type: string
                    example: "No se pudo eliminar la oficina, puede ser que la oficina ya no exista."
        '500':
          description: Error interno en el servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error interno en el servidor"



